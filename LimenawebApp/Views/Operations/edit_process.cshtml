@model LimenawebApp.Models.PurchaseData_product
@{
    ViewBag.Title = "Distribuidora Limeña - New Data";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}


<div class="page__header">
    <div class="container-fluid page__heading-container">
        <div class="page__heading d-flex align-items-center">
            <div class="flex">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mb-0">
                        <li class="breadcrumb-item"><a href="#">Purchases</a></li>
                        <li class="breadcrumb-item active" aria-current="page">S&OP</li>
                    </ol>
                </nav>
                <h1 class="m-0">Sales Budget</h1>
            </div>

        </div>
    </div>
</div> <!-- // END page__header -->
<!--Page Header menu-->
@Html.Partial("~/Views/Shared/New_design/Menus/Purchases.cshtml")
<!-- Page Header -->
<!-- /loader -->
<div class="container-fluid page__heading-container">
    <div class="page__heading d-flex align-items-center">
        <div class="flex">

            <h1 class="mb-2">@Model.ItemCode</h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="#"><i class="material-icons">bookmark</i>@Model.Description</a></li>
                </ol>
            </nav>
        </div>
        <div>
            <a href="#" class="btn btn-outline-success" onclick="saveTotalSB()">Save all changes <i class="material-icons ml-2">check</i></a>
            <a href="@Url.Action("Final_forecast", "Operations", new { iddata=ViewBag.iddata})" class="btn btn-light ml-3"><i class="material-icons">chevron_left</i> Back</a>

           
        </div>
    </div>
</div>

<div class="container-fluid page__container">

    <div class="row">
        <div class="col-md-12">
            <h5 class="card-subtitle mb-0">Source: Sales Reviews</h5>
            <!-- Badges -->
            <div class="badge-group mb-5">


            </div>
            <table class="table" id="salesforecast" style="width:100%">
                <thead>
                    <tr>
                        <th>Sales Rep</th>
                        <th>1</th>
                        <th>2</th>
                        <th>3</th>
                        <th>4</th>
                        <th>5</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewBag.SalesRepsEdit)
                    {

                        if (item.id_SalesRep == 0)
                        {
                            <tr style="font-weight:bold;">
                                <td>TOTAL (Sales Budget)</td>
                                <td class="finalcolp1">@Math.Round(Convert.ToDouble(item.p1), 0, MidpointRounding.ToEven)</td>
                                <td class="finalcolp2">@Math.Round(Convert.ToDouble(item.p2), 0, MidpointRounding.ToEven)</td>
                                <td class="finalcolp3">@Math.Round(Convert.ToDouble(item.p3), 0, MidpointRounding.ToEven)</td>
                                <td class="finalcolp4">@Math.Round(Convert.ToDouble(item.p4), 0, MidpointRounding.ToEven)</td>
                                <td class="finalcolp5">@Math.Round(Convert.ToDouble(item.p5), 0, MidpointRounding.ToEven)</td>




                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>@item.SalesRep</td>
                                <td data-salesrep="@item.id_SalesRep" class="editMe colp1">@Math.Round(Convert.ToDouble(item.p1), 0, MidpointRounding.ToEven)</td>
                                <td data-salesrep="@item.id_SalesRep" class="editMe colp2">@Math.Round(Convert.ToDouble(item.p2), 0, MidpointRounding.ToEven)</td>
                                <td data-salesrep="@item.id_SalesRep" class="editMe colp3">@Math.Round(Convert.ToDouble(item.p3), 0, MidpointRounding.ToEven)</td>
                                <td data-salesrep="@item.id_SalesRep" class="editMe colp4">@Math.Round(Convert.ToDouble(item.p4), 0, MidpointRounding.ToEven)</td>
                                <td data-salesrep="@item.id_SalesRep" class="editMe colp5">@Math.Round(Convert.ToDouble(item.p5), 0, MidpointRounding.ToEven)</td>



                            </tr>
                        }
                    }


                </tbody>
            </table>
        </div>
    </div>
    <hr />
    <div class="alert alert-soft-success d-flex align-items-center card-margin" role="alert">
        <i class="material-icons mr-3">bookmark</i>
        <div class="text-body"><strong>Product Information.</strong> Here you can check all product information and assigned forecast. </div>
    </div>
    <div class="row">

        <div class="col-md-6">
            <div class="card">
                <div class="card-header card-header-large bg-white">
                    <h4 class="card-header__title">Sales History</h4>
                    <p>Click on a Sales Representative to show more information.</p>
                </div>
                <div class="card-body">
                    <table class="table" style="width:100%">
                        <thead>
                            <tr>
                                <th>Sales Rep</th>
                                <th>-1</th>
                                <th>-2</th>
                                <th>-3</th>
                                <th>-4</th>
                                <th>-5</th>
                                <th>-6</th>
                                <th>AVG</th>
                                <th>%</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in ViewBag.salesHistory)
                            {
                                if (item.id_SalesRep == 0)
                                {
                                    <tr style="font-weight:bold">
                                        <td style="font-size:11px;">Total</td>
                                        <td style="font-size:11px;"></td>
                                        <td style="font-size:11px;"></td>
                                        <td style="font-size:11px;"></td>
                                        <td style="font-size:11px;"></td>
                                        <td style="font-size:11px;"></td>
                                        <td style="font-size:11px;"></td>

                                        <td style="font-size:11px;">@String.Format("{0:N}", item.AVG)</td>
                                        <td style="font-size:11px;">@String.Format("{0:N}", item.PCT)</td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td style="font-size:11px;"><a href="#" data-idrep="@item.id_SalesRep" data-name="@item.SalesRep" data-p1value="@item.p1" data-toggle="modal" data-target="#large-modal">@item.SalesRep</a></td>
                                        <td style="font-size:11px;">@String.Format("{0:N0}", item.p1)</td>
                                        <td style="font-size:11px;">@String.Format("{0:N0}", item.p2)</td>
                                        <td style="font-size:11px;">@String.Format("{0:N0}", item.p3)</td>
                                        <td style="font-size:11px;">@String.Format("{0:N0}", item.p4)</td>
                                        <td style="font-size:11px;">@String.Format("{0:N0}", item.p5)</td>
                                        <td style="font-size:11px;">@String.Format("{0:N0}", item.p6)</td>

                                        <td style="font-size:11px;">@String.Format("{0:N0}", item.AVG)</td>
                                        <td style="font-size:11px;">@String.Format("{0:N0}", item.PCT)</td>
                                    </tr>
                                }

                            }


                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-header__title">Agents Forecast</h4>
                    <p>Source: Purchases Agents.</p>
                    <table id="tablepurchaseforecast" class="table" style="width:100%; font-family: 'Open Sans' !important; font-size:12px">

                        <tbody>
                            <tr>
                                <td>PERIOD-YEAR</td>
                                <td>@Model.Forecast1_source1_period - @Model.Forecast1_source1_year</td>
                                <td>@Model.Forecast2_source1_period - @Model.Forecast2_source1_year</td>
                                <td>@Model.Forecast3_source1_period - @Model.Forecast3_source1_year</td>
                                <td>@Model.Forecast4_source1_period - @Model.Forecast4_source1_year</td>
                                <td>@Model.Forecast5_source1_period - @Model.Forecast5_source1_year</td>
                            </tr>
                            <tr>
                                <td>FORECAST</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Forecast1_source2), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Forecast2_source2), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Forecast3_source2), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Forecast4_source2), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Forecast5_source2), 0, MidpointRounding.ToEven)</td>
                            </tr>
                        </tbody>

                    </table>
                    <hr />

                    <h4 class="card-header__title">Purchase tool Forecast</h4>
                    <p>Source: MatrizCompras Database</p>
                    <table id="data_sales" class="table" style="width:100%; font-family: 'Open Sans' !important; font-size:12px;font-weight:normal">

                        <tbody>
                            <tr>
                                <td>PERIOD-YEAR</td>
                                <td>@Model.Forecast1_source1_period - @Model.Forecast1_source1_year</td>
                                <td>@Model.Forecast2_source1_period - @Model.Forecast2_source1_year</td>
                                <td>@Model.Forecast3_source1_period - @Model.Forecast3_source1_year</td>
                                <td>@Model.Forecast4_source1_period - @Model.Forecast4_source1_year</td>
                                <td>@Model.Forecast5_source1_period - @Model.Forecast5_source1_year</td>
                            </tr>
                            <tr>
                                <td>BASELINE</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Baseline1), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Baseline2), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Baseline3), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Baseline4), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Baseline5), 0, MidpointRounding.ToEven)</td>
                            </tr>
                            <tr>
                                <td>FORECAST</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Forecast1_source1), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Forecast2_source1), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Forecast3_source1), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Forecast4_source1), 0, MidpointRounding.ToEven)</td>
                                <td>@Math.Round(Convert.ToDouble(Model.Forecast5_source1), 0, MidpointRounding.ToEven)</td>
                            </tr>
                        </tbody>




                    </table>

                    <hr />
                    <!-- Text Area -->
                    <div class="form-group">
                        <label>Comments:</label><br />
                        <textarea class="form-control border-0 shadow-none bg-focus" id="commentsproduct"
                                  rows="2"
                                  placeholder="Product Comments">@Model.Comments</textarea>
                    </div>
                    <hr />
                    <a href="@Url.Action("Product_stats","Operations", new { ItemCode= Model.ItemCode, data=ViewBag.iddata})" class="btn btn-light ml-3"><i class="material-icons">timeline</i> Sales Stats</a>
                </div>
            </div>
        </div>
    </div>

</div>


<!-- /root -->
@Html.Partial("~/Views/Shared/main_Scripts.cshtml")
<script src="~/Content/appcontent/assets/vendor/tableeditorinline/SimpleTableCellEditor.es6.min.js"></script>

<script>
        $(document).ready(function () {
            //Basic editor
            var simpleEditor = new SimpleTableCellEditor("salesforecast");

            simpleEditor.SetEditableClass("editMe");

            $('#salesforecast').on("cell:edited", function (event) {

                var classsel = "";
                var classselFinal = "";


                var periodo = ""
            var itemcode = '@Model.ItemCode';
            var description = '@Model.Description';
            var iddatad = '@ViewBag.iddata';
                var rep = $(event.element).data("salesrep")

                if (event.element.classList.contains("colp1")) {
                    classsel = ".colp1";
                    classselFinal = ".finalcolp1";
                    periodo = "f1";
                } else if (event.element.classList.contains("colp2")) {
                    classsel = ".colp2";
                    classselFinal = ".finalcolp2";
                    periodo = "f2";
                } else if (event.element.classList.contains("colp3")) {
                     classsel = ".colp3";
                    classselFinal = ".finalcolp3";
                    periodo = "f3";
                } else if (event.element.classList.contains("colp4")) {
                    classsel = ".colp4";
                    classselFinal = ".finalcolp4";
                    periodo = "f4";
                } else if (event.element.classList.contains("colp5")) {
                    classsel = ".colp5";
                    classselFinal = ".finalcolp5";
                    periodo = "f5";
                }



                //verificamos si es numero
                var esnumero = 0.0;
                try {
                    esnumero = parseFloat(event.newValue);

                    if (isNaN(esnumero)) {
                        esnumero = 0.0;
                        event.element.style.backgroundColor = "#ffeea5";
                        event.element.innerHTML = "0";

                        var suma = 0.0;
                        //Foreach
                        $.each($(classsel), function () {
                            suma = parseFloat($(this).text()) + suma;
                        });
                        //suma  colp1
                        $(classselFinal).css("background-color", "#ffeea5")
                        $(classselFinal).text(suma.toFixed(2));



                    } else {
                        event.element.innerHTML = esnumero.toFixed(2);
                        console.log(`'${event.oldValue}' changed to '${event.newValue}'`);

                        event.element.style.backgroundColor = "#ffeea5";

                        var suma = 0.0;
                        //Foreach
                        $.each($(classsel), function () {
                            suma = parseFloat($(this).text()) + suma;
                        });
                        //suma  colp1
                        $(classselFinal).css("background-color", "#ffeea5")
                        $(classselFinal).text(suma.toFixed(2));



                        $.ajax
                            ({
                                url: '/Operations/Save_productforecast',
                                type: 'POST',
                                data: { 'itemcode': itemcode, 'description': description, 'periodo': periodo, 'newval': suma, 'iddata': iddatad, 'rep': rep, 'valbyrep': esnumero },
                                success: function (result) {
                                    if (result == "SUCCESS") {
                                        toastr.success('Data saved successfully');


                                    } else {
                                        toastr.warning('Something went wrong, try again');
                                        $(classselFinal).css("background-color", "red")
                                    }


                                },
                                error: function () {

                                },
                            });

                    }


                } catch{
                    esnumero = 0.0;
                    event.element.style.backgroundColor = "#fff";
                    event.element.innerHTML = "0";
                    $(".finalcolp1").text("Error");
                }





            });




            $('#commentsproduct').blur(function () {
                var comment = $.trim($("#commentsproduct").val());
                var iddatad = '@ViewBag.iddata';
                var product = '@Model.ItemCode';
            if (comment != "") {
                // Guardamos si no viene vacio
                $.ajax
                    ({
                        url: '/Operations/Save_productCommentMatriz',
                        type: 'POST',
                        data: { 'comment': comment, 'iddata': iddatad, 'product': product },
                        success: function (result) {
                            if (result == "SUCCESS") {
                                toastr.success('Data saved successfully');


                            } else {
                                toastr.warning('Something went wrong, try again');
                            }


                        },
                        error: function () {

                        },
                    });
            }
        });



            (function ($) {
                'use strict';
                $('#large-modal').on('show.bs.modal', function (event) {

                    var button = $(event.relatedTarget);// Button that triggered the modal

                    var idrep = button.data("idrep");
                    var name = button.data("name");
                    var p1value = parseFloat(button.data("p1value"));
                    var iddatad = '@ViewBag.iddata';
                    var itemcode = '@Model.ItemCode';
                    var description = '@Model.Description';

                    $.ajax
                        ({
                            url: '/Operations/Get_acertividadSR',
                            type: 'POST',
                            data: { 'itemcode': itemcode, 'iddata': iddatad, 'idsap': idrep},
                            success: function (result) {
                                if (result.response == "SUCCESS") {

                                    $("#periodoantlabel").text(result.period);
                                    $("#periodoactuallabel").text(result.actualperiod);
                                    $("#actualforecastlabel").text(result.actualforecast);
                                    //result.lastsavedforecast = 9 //Eliminar esto
                                    $("#lastsavedforecastlabel").text(result.lastsavedforecast);
                                    $("#lastforecastSHlabel").text(p1value.toFixed(0));
                                    $("#replabel").text(name);

                                    var comp = parseInt(result.actualforecast - result.lastsavedforecast);
                                    if (comp > 0) { $("#comparacionlabel").text("+" +  comp); } else { $("#comparacionlabel").text(comp);}

                                    $("#itemcodelabel").text(itemcode + " - " + description);

                                    var htmllabel = '';
                                    $("#acertividadcol").html('');
                                    if (result.lastsavedforecast == 0 || p1value==0) { htmllabel = '<label>N/A</label>' }
                                    else {

                                        if (result.lastsavedforecast > p1value && result.lastsavedforecast != p1value) { //Valores positivos
                                            var resultado = ((result.lastsavedforecast - p1value)/p1value) * 10;

                                            if (resultado > 0 && resultado < 6) {
                                                htmllabel = '<span class="badge badge-circle badge-success">+ ' + resultado.toFixed(1) + '%</span>';
                                            }
                                            if (resultado > 5 && resultado < 11) {
                                                htmllabel = '<span class="badge badge-circle badge-warning">+ ' + resultado.toFixed(1) + '%</span>';
                                            }
                                            if (resultado > 10) {
                                                htmllabel = '<span class="badge badge-circle badge-danger">+ ' + resultado.toFixed(1) + '%</span>';
                                            }


                                        }
                                        else if (result.lastsavedforecast == p1value) {
                                            htmllabel = '<span class="badge badge-circle badge-success">0%</span>';
                                        }

                                        else {//valores negativos

                                            var resultado = ((p1value - result.lastsavedforecast) / result.lastsavedforecast) * 10;

                                            if (resultado > 0 && resultado < 6) {
                                                htmllabel = '<span class="badge badge-circle badge-success">- ' + resultado.toFixed(1) + '%</span>';
                                            }
                                            if (resultado > 5 && resultado < 11) {
                                                htmllabel = '<span class="badge badge-circle badge-warning">- ' + resultado.toFixed(1) + '%</span>';
                                            }
                                            if (resultado > 10) {
                                                htmllabel = '<span class="badge badge-circle badge-danger">- ' + resultado.toFixed(1) + '%</span>';
                                            }
                                        }

                                    }


                                    $("#acertividadcol").append(htmllabel);



                                } else {
                                    toastr.info(result.response);
                                    $('#large-modal').hide();

                                }


                            },
                            error: function () {

                            },
                        });

                })
            })(jQuery);


        });
                   function saveTotalSB(){

            var itemcode = '@Model.ItemCode';
            var description = '@Model.Description';
            var iddatad = '@ViewBag.iddata';

               var sumap1 = 0.0;
               var sumap2 = 0.0;
               var sumap3 = 0.0;
               var sumap4 = 0.0;
               var sumap5 = 0.0;
                try {

                        //Foreach

                    $.each($(".colp1"), function () {
                        sumap1 = parseFloat($(this).text()) + sumap1;

                    });

                    $.each($(".colp2"), function () {
                        sumap2 = parseFloat($(this).text()) + sumap2;
                    });

                    $.each($(".colp3"), function () {
                        sumap3 = parseFloat($(this).text()) + sumap3;
                        console.log(sumap3);
                    });

                    $.each($(".colp4"), function () {
                        sumap4 = parseFloat($(this).text()) + sumap4;
                    });

                    $.each($(".colp5"), function () {
                        sumap5 = parseFloat($(this).text()) + sumap5;
                    });

                        $.ajax
                            ({
                                url: '/Operations/Save_SalesBudget',
                                type: 'POST',
                                data: { 'itemcode': itemcode, 'description': description, 'iddata': iddatad, 'newvalp1': sumap1, 'newvalp2': sumap2, 'newvalp3': sumap3, 'newvalp4': sumap4, 'newvalp5': sumap5   },
                                success: function (result) {
                                    if (result == "SUCCESS") {
                                        toastr.success('Sales Budget saved successfully');


                                    } else {
                                        toastr.warning('Something went wrong, try again');


                                    }


                                },
                                error: function () {

                                },
                            });




                } catch{

                }

            }

            //var editor;
            //$(document).ready(function () {

            //    var table = $('#tablepurchaseforecast').DataTable({
            //        paging: false,
            //        searching: false,
            //        drawCallback: function (settings) {
            //            var api = this.api();

            //            $('.editable', api.table().body())
            //                .editable()
            //                .off('hidden')
            //                .on('hidden', function (e, reason) {
            //                    if (reason === 'save') {
            //                        $(this).closest('tr').find('.savebtn').show();
            //                        //$(this).closest('td').attr('data-order', $(this).text());
            //                        table.row($(this).closest('tr')).invalidate().draw(false);
            //                    }
            //                });
            //        }
            //    });

            //});
</script>
