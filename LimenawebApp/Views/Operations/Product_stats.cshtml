@model  List<LimenawebApp.Controllers.OperationsController.salesHistory>
@{
    ViewBag.Title = "Distribuidora Limeña - Purchase Data";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}
<div class="page__header">
    <div class="container-fluid page__heading-container">
        <div class="page__heading d-flex align-items-center">
            <div class="flex">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mb-0">
                        <li class="breadcrumb-item"><a href="#">Purchases</a></li>
                        <li class="breadcrumb-item active" aria-current="page">S&OP</li>
                    </ol>
                </nav>
                <h1 class="m-0">Sales Stats</h1>
            </div>

        </div>
    </div>
</div> <!-- // END page__header -->
<!--Page Header menu-->
@Html.Partial("~/Views/Shared/New_design/Menus/Purchases.cshtml")
<!-- Page Header -->
<!-- /loader -->
<div class="container-fluid page__heading-container">
    <div class="page__heading d-flex align-items-center">
        <div class="flex">

            <h1 class="mb-2">@ViewBag.idproduct</h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="#"><i class="material-icons">timeline</i>@ViewBag.product</a></li>
                </ol>
            </nav>
        </div>
        <div>
            <a href="@Url.Action("edit_process","Operations", new { ItemCode= ViewBag.idproduct, data= ViewBag.iddata})" class="btn btn-light ml-3"><i class="material-icons">chevron_left</i> Back</a>


        </div>
    </div>
</div>

<div class="container-fluid page__container">
    <div class="row">
        <div class="col-xl-12">
            <div class="card card-shadow">
                <div class="card-header">
                    <div class="custom-title-wrap bar-success">
                        <div class="custom-title">
                            <h5 class="card-subtitle mb-0">Source: SAP & MatrizCompras Database</h5><br />
                        </div>
                    </div>

                </div>

                <div class="card-body- pt-3 pb-4">


                    <div class="embed-responsive embed-responsive-21by9">
                        <div id="chartdiv" class="embed-responsive-item"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

    @Html.Partial("~/Views/Shared/main_Scripts.cshtml")
    <script src="https://www.amcharts.com/lib/4/core.js"></script>
    <script src="https://www.amcharts.com/lib/4/charts.js"></script>
    <script src="https://www.amcharts.com/lib/4/themes/animated.js"></script>
    <script>
        $(document).ready(function () {

             var stringArray = @Html.Raw(Json.Encode(ViewBag.salesJSON));
            console.log(stringArray);
            am4core.ready(function () {

                // Themes begin
                am4core.useTheme(am4themes_animated);
                // Themes end

                // Create chart instance
                var chart = am4core.create("chartdiv", am4charts.XYChart);

                // Increase contrast by taking evey second color
                chart.colors.step = 2;

                // Add data
                chart.data = generateChartData();

                // Create axes
                var dateAxis = chart.xAxes.push(new am4charts.CategoryAxis());
                dateAxis.renderer.minGridDistance = 50;
                dateAxis.dataFields.category = "category";
                // Create series
                function createAxisAndSeries(field, name, opposite, bullet) {
                    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());

                    var series = chart.series.push(new am4charts.LineSeries());
                    series.dataFields.valueY = field;
                    series.dataFields.categoryX = "category";
                    series.strokeWidth = 2;
                    series.yAxis = valueAxis;
                    series.name = name;
                    series.tooltipText = "{name}: [bold]{valueY}[/]";
                    series.tensionX = 0.8;

                    var interfaceColors = new am4core.InterfaceColorSet();

                    switch (bullet) {
                        case "triangle":
                            var bullet = series.bullets.push(new am4charts.Bullet());
                            bullet.width = 12;
                            bullet.height = 12;
                            bullet.horizontalCenter = "middle";
                            bullet.verticalCenter = "middle";

                            var triangle = bullet.createChild(am4core.Triangle);
                            triangle.stroke = interfaceColors.getFor("background");
                            triangle.strokeWidth = 2;
                            triangle.direction = "top";
                            triangle.width = 12;
                            triangle.height = 12;
                            break;
                        case "rectangle":
                            var bullet = series.bullets.push(new am4charts.Bullet());
                            bullet.width = 10;
                            bullet.height = 10;
                            bullet.horizontalCenter = "middle";
                            bullet.verticalCenter = "middle";

                            var rectangle = bullet.createChild(am4core.Rectangle);
                            rectangle.stroke = interfaceColors.getFor("background");
                            rectangle.strokeWidth = 2;
                            rectangle.width = 10;
                            rectangle.height = 10;
                            break;
                        default:
                            var bullet = series.bullets.push(new am4charts.CircleBullet());
                            bullet.circle.stroke = interfaceColors.getFor("background");
                            bullet.circle.strokeWidth = 2;
                            break;
                    }

                    valueAxis.renderer.line.strokeOpacity = 1;
                    valueAxis.renderer.line.strokeWidth = 2;
                    valueAxis.renderer.line.stroke = series.stroke;
                    valueAxis.renderer.labels.template.fill = series.stroke;
                    valueAxis.renderer.opposite = opposite;
                    valueAxis.renderer.grid.template.disabled = true;
                }

                createAxisAndSeries("a2018", "2018", true, "circle");
                createAxisAndSeries("a2019", "2019", true, "triangle");
                createAxisAndSeries("a2020", "FCST 2020", true, "rectangle");

                // Add legend
                chart.legend = new am4charts.Legend();

                // Add cursor
                chart.cursor = new am4charts.XYCursor();

                // generate some random data, quite different range
                function generateChartData() {
                    var chartData = stringArray;

                    return chartData;
                }

            }); // end am4core.ready()



        });


    </script>



