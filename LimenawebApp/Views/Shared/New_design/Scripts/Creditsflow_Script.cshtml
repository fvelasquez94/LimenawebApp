@model LimenawebApp.Models.Invoices.Invoices_api

@{
    Layout = null;
   
}
<script type="text/javascript">


    $(document).ready(function () {
        if ($(this).width() < 767) {
            return $('.timeline > li').css('margin-top', '');
        } else {
            return $('.timeline > li').css('margin-top', $('.timeline > li').height());
        }

        (function () {
            $(window).on('load resize', function () {
               
                if ($(this).width() < 767) {
                    return $('.timeline > li').css('margin-top', '');
                } else {
                    return $('.timeline > li').css('margin-top', $('.timeline > li').height());
                }
            });
        }).call(this);



        //var $flowchart = $('#flowchartworkspace');
        //var $container = $flowchart.parent();


        //$flowchart.flowchart({
        //    data: defaultFlowchartData,
        //    defaultSelectedLinkColor: '#000055',
       
        //    canUserMoveOperators: true,
        //    grid: 10,
        //    multipleLinksOnInput: false,
        //    multipleLinksOnOutput: false
        //});


        function getOperatorData($element) {
            var nbInputs = parseInt($element.data('nb-inputs'), 10);
            var nbOutputs = parseInt($element.data('nb-outputs'), 10);
            var data = {
                properties: {
                    title: $element.text(),
                    inputs: {},
                    outputs: {}
                }
            };

            var i = 0;
            for (i = 0; i < nbInputs; i++) {
                data.properties.inputs['input_' + i] = {
                    label: 'Input ' + (i + 1)
                };
            }
            for (i = 0; i < nbOutputs; i++) {
                data.properties.outputs['output_' + i] = {
                    label: 'Output ' + (i + 1)
                };
            }

            return data;
        }



        //-----------------------------------------
        //--- operator and link properties
        //--- start
        var $operatorProperties = $('#operator_properties');
        $operatorProperties.hide();
        var $linkProperties = $('#link_properties');
        $linkProperties.hide();
        var $operatorTitle = $('#operator_title');
        var $linkColor = $('#link_color');

        $flowchart.flowchart({
            onOperatorSelect: function (operatorId) {
                $operatorProperties.show();
                $operatorTitle.val($flowchart.flowchart('getOperatorTitle', operatorId));
                return true;
            },
            onOperatorUnselect: function () {
                $operatorProperties.hide();
                return true;
            },
            onLinkSelect: function (linkId) {
                $linkProperties.show();
                $linkColor.val($flowchart.flowchart('getLinkMainColor', linkId));
                return true;
            },
            onLinkUnselect: function () {
                $linkProperties.hide();
                return true;
            }
        });

        $operatorTitle.keyup(function () {
            var selectedOperatorId = $flowchart.flowchart('getSelectedOperatorId');
            if (selectedOperatorId != null) {
                $flowchart.flowchart('setOperatorTitle', selectedOperatorId, $operatorTitle.val());
            }
        });





        //-----------------------------------------
        //--- draggable operators
        //--- start
        //var operatorId = 0;
        var $draggableOperators = $('.draggable_operator');
        $draggableOperators.draggable({
            cursor: "move",
            opacity: 0.7,
            

            // helper: 'clone',
            appendTo: 'body',
            zIndex: 1000,

            helper: function (e) {
                var $this = $(this);
                var data = getOperatorData($this);
                return $flowchart.flowchart('getOperatorElement', data);
            },
            stop: function (e, ui) {
                var $this = $(this);
                var elOffset = ui.offset;
                var containerOffset = $container.offset();
                if (elOffset.left > containerOffset.left &&
                    elOffset.top > containerOffset.top &&
                    elOffset.left < containerOffset.left + $container.width() &&
                    elOffset.top < containerOffset.top + $container.height()) {

                    var flowchartOffset = $flowchart.offset();

                    var relativeLeft = elOffset.left - flowchartOffset.left;
                    var relativeTop = elOffset.top - flowchartOffset.top;

                    var positionRatio = $flowchart.flowchart('getPositionRatio');
                    relativeLeft /= positionRatio;
                    relativeTop /= positionRatio;

                    var data = getOperatorData($this);
                    data.left = relativeLeft;
                    data.top = relativeTop;

                    $flowchart.flowchart('addOperator', data);
                }
            }
        });
        //--- end
        //--- draggable operators
        //-----------------------------------------


        //-----------------------------------------
        //--- save and load
        //--- start

        function Text2Flow() {
            var data = JSON.parse($('#flowchart_data').val());
            $flowchart.flowchart('setData', data);
        }


        //--- end
        //--- save and load
        //-----------------------------------------


    });

    var defaultFlowchartData = {
        operators: {
            operator1: {
                top: 20,
                left: 20,
                properties: {
                    title: 'Invoice #' + @Model.docNum,
                    body: 'Customer: @Model.cardCode - @Model.cardName' + '<br>' + 'Total: $@Model.balance.ToString("N2")' + '<br>' + 'Creation Date: @Convert.ToDateTime(Model.docDate).ToShortDateString()' + '<br>' +
                        'Delivery Date: @Convert.ToDateTime(Model.deliveryDate).ToShortDateString()' ,
                    inputs: {},
                    outputs: {
                        output_1: {
                            label: 'Credits/Returns (Limena)' ,
                        },  output_2: {
                            label: 'Credits/Returns (BAR-S FUD)' ,
                        }, output_3: {
                            label: 'Payments',
                        }
                    }
                }
            },
            operator2: {
                top: 80,
                left: 300,
                properties: {
                    title: 'Docentry #',
                    body: 'Created by: ' + '<br>' + 'Datetime: ',
                    inputs: {
                        input_1: {
                            label: 'Details',
                        }
                    },
                    outputs: {}
                }
            },
            operator3: {
                top: 280,
                left: 600,
                properties: {
                    title: 'Docentry #',
                    body: 'Created by: ' + '<br>' + 'Datetime: ',
                    inputs: {
                        input_1: {
                            label: 'Details',
                        }
                    },
                    outputs: {}
                }
            },
            operator4: {
                top: 480,
                left: 300,
                properties: {
                    title: 'Docentry #',
                    body: 'Created by: ' + '<br>' + 'Datetime: ' + '<br>' + 'Payment Type: ' + '<br>' + 'Amount: $0.00',
                    inputs: {
                        input_1: {
                            label: '#4343443',
                        }
                    },
                    outputs: {}
                }
            },
        },
        links: {
            link_1: {
                fromOperator: 'operator1',
                fromConnector: 'output_1',
                toOperator: 'operator2',
                toConnector: 'input_1',
                color:'#FF5733'
            },
            link_2: {
                fromOperator: 'operator1',
                fromConnector: 'output_2',
                toOperator: 'operator3',
                toConnector: 'input_1',
                color: '#FF5733'
            },
            link_3: {
                fromOperator: 'operator1',
                fromConnector: 'output_3',
                toOperator: 'operator4',
                toConnector: 'input_1',
        
            },
        }
    };
    if (false) console.log('remove lint unused warning', defaultFlowchartData);
</script>